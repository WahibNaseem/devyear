# This is a basic workflow to help you get started with Actions

# Workflow always needs to have a name which it has given below

name: Basic Workflow

# Controls when the workflow will run
# I need to have keyword on then below workflow_dispatch is the name of the event
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 # push:
  #  branches: [ "main" ]
  #pull_request:
   # branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
     name:
         description: "Person to greet"
         default: "World"
         required: true
         type: string
     city:
         description: "Favorite city"
         required: true
         default: "Munich"
         type: choice
         options:
               - New York
               - Seattle
               - Berlin
     fav-color-blue:
         description: "Is you favourite color blue"
         required: true
         type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  greet:
     # Display name for the job
     name: "Greetings, Program!"
    # The type of runner that the job will run on
     runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
     steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Send greeting
        run: | 
           echo "Hello ${{github.event.inputs.name}}"
           echo "Your Favourite city is ${{github.event.inputs.city}}"
           echo "Is your favourite color blue: ${{github.event.inputs.fav-color-blue}}"
      #- uses: actions/checkout@v4

      # Runs a single command using the runners shell
     # - name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
       # run: |
        #  echo Add other actions to build,
         # echo test, and deploy your project.
