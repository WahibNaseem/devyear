# This is a basic workflow to help you get started with Actions

name: Variables and Context

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 # push:
  #  branches: [ "main" ]
 # pull_request:
 #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
     name: 
         description: "Person to greet"
         default: "World"
         required: true
         type: string
         
     city:
         description: "Favourite city"
         default: "Munich"
         required: true
         type: string
         
       

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  job1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Display name of the step
      - name: Dump GitHub context
        # Creating environment varialbe just for this step or only avaiable for this step we can say
        env:   
         Mera_Variable_GITHUB_CONTEXT: ${{ toJSON(github)}}   # here Mera_Variable_GITHUB_CONTEXT is a variable that save the github context value after converting into json
        run: echo "$Mera_Variable_GITHUB_CONTEXT"  # echo the value of the variable

  # step/job output variables
  job2:
    runs-on: ubuntu-latest
# suppose i want to take step 1 output and pass it to another job then i have to declare output variable just like i have done below
    outputs:
     output1: ${{ steps.step1.outputs.step1value}}
     output2: ${{ steps.step2.outputs.step2value}}

    steps:
      - name: Step 1
        id: step1
        run: echo "step1value=Hello Wahib" >> $GITHUB_OUTPUT  # this one define step1value variable and assign hello wahib value to it and then insert into github_output
      - name: Step 2
        id: step2
        run: echo "step2value= to world" >> $GITHUB_OUTPUT

  job3:
   runs-on: ubuntu-latest
   needs: job2   # i need job2 to complete successfully in order to get its variable output value
   steps:
    - run: echo ${{needs.job2.outputs.output1}} ${{needs.job2.outputs.outputs2}}
        

     
